rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isProvider() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'provider';
    }
    
    function isCustomer() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'customer';
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && isOwner(userId);
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
    }
    
    // Providers collection (extended provider details)
    match /providers/{providerId} {
      allow read: if isAuthenticated();
      allow create, update: if isOwner(providerId) || isAdmin();
      allow delete: if isAdmin();
    }
    
    // Bookings collection
    match /bookings/{bookingId} {
      allow read: if isAuthenticated() && (
        isAdmin() || 
        resource.data.customerId == request.auth.uid ||
        resource.data.providerId == request.auth.uid
      );
      allow create: if isCustomer();
      allow update: if isAuthenticated() && (
        isAdmin() ||
        (isCustomer() && resource.data.customerId == request.auth.uid) ||
        (isProvider() && resource.data.providerId == request.auth.uid)
      );
      allow delete: if isAdmin();
    }
    
    // Reviews collection
    match /reviews/{reviewId} {
      allow read: if true;
      allow create: if isCustomer() && exists(/databases/$(database)/documents/bookings/$(request.resource.data.bookingId));
      allow update, delete: if isAdmin();
    }
    
    // Services collection (static data)
    match /services/{serviceId} {
      allow read: if true;
      allow write: if isAdmin();
    }
  }
} 